@page "/"
@inject ISnackbar Snackbar

@using System.Linq
@using System.Collections.Generic
@using MudBlazor
@using MudBlazor.Charts

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-4">
    <!-- Page Title -->
    <MudText Typo="Typo.h4" Class="mb-4 text-center">Real Time Update</MudText>
    
    <!-- Top Row Cards -->
    <MudGrid>
        <MudItem xs="12" sm="6" md="2">
            <MudCard Elevation="3" Class="rounded-lg">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Temperatur</MudText>
                    <MudText Typo="Typo.h5" Color="@GetTemperatureColor(currentTemperature)">@currentTemperature°C</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="6" md="2">
            <MudCard Elevation="3" Class="rounded-lg">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Luftfeuchtigkeit</MudText>
                    <MudText Typo="Typo.h5" Color="@GetHumidityColor(currentHumidity)">@currentHumidity%</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="6" md="2">
            <MudCard Elevation="3" Class="rounded-lg">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Luftdruck</MudText>
                    <MudText Typo="Typo.h5" Color="@GetPressureColor(currentPressure)">@currentPressure hPa</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="6" md="2">
            <MudCard Elevation="3" Class="rounded-lg">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Luftqualität</MudText>
                    <MudText Typo="Typo.h5" Color="@GetAirQualityColor(currentAirQuality)">@currentAirQuality AQI</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        
        <MudItem xs="12" sm="6" md="2">
            <MudCard Elevation="3" Class="rounded-lg">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Tag-Nacht Zeit</MudText>
                    <MudText Typo="Typo.h5">@dayTimeStatus</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Charts and Gauges Section -->
    <MudGrid Class="mt-4">
        <!-- Charts -->
        <MudItem xs="12" md="8">
            <MudGrid>
                <MudItem xs="12" md="6">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Temperatur Chart</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudChart ChartType="ChartType.Line" ChartSeries="@temperatureSeries" XAxisLabels="@dayLabels" Width="100%" Height="300px">
                                <CustomGraphics>
                                </CustomGraphics>
                            </MudChart>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Luftfeuchtigkeit Chart</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudChart ChartType="ChartType.Line" ChartSeries="@humiditySeries" XAxisLabels="@dayLabels" Width="100%" Height="300px">
                                <CustomGraphics>
                                </CustomGraphics>
                            </MudChart>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Luftdruck Chart</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudChart ChartType="ChartType.Line" ChartSeries="@pressureSeries" XAxisLabels="@dayLabels" Width="100%" Height="300px">
                                <CustomGraphics>
                                </CustomGraphics>
                            </MudChart>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                
                <MudItem xs="12" md="6">
                    <MudCard Elevation="3" Class="rounded-lg">
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Luftqualität Chart</MudText>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudChart ChartType="ChartType.Line" ChartSeries="@airQualitySeries" XAxisLabels="@dayLabels" Width="100%" Height="300px">
                                <CustomGraphics>

                                </CustomGraphics>
                            </MudChart>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudItem>
        
        <!-- Right Column - Gauges and Warnings -->
        <MudItem xs="12" md="4">
            <MudCard Elevation="3" Class="rounded-lg h-100">
                <MudCardHeader>
                    <MudText Typo="Typo.h6">Warnmeldungen mit Progressbar</MudText>
                </MudCardHeader>
                <MudCardContent>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    // Current values
    private double currentTemperature { get; set; } = 22;
    private int currentHumidity { get; set; } = 45;
    private int currentPressure { get; set; } = 1013;
    private int currentAirQuality { get; set; } = 35;
    private string dayTimeStatus { get; set; } = "Tag";

    // Chart data
    private string[] dayLabels = new string[] { "Mo", "Di", "Mi", "Do", "Fr", "Sa", "So" };
    private List<ChartSeries> temperatureSeries = new List<ChartSeries>();
    private List<ChartSeries> humiditySeries = new List<ChartSeries>();
    private List<ChartSeries> pressureSeries = new List<ChartSeries>();
    private List<ChartSeries> airQualitySeries = new List<ChartSeries>();

    protected override void OnInitialized()
    {

    }

    private void UpdateData()
    {
        // Check if any values are in danger zone and show notification
        if (IsTemperatureDangerous(currentTemperature) ||
            IsHumidityDangerous(currentHumidity) ||
            IsAirQualityDangerous(currentAirQuality))
        { }

        // Force UI update
        InvokeAsync(StateHasChanged);
    }
   
    
    // Helper methods for color coding
    private Color GetTemperatureColor(double temp)
    {
        if (temp < 18 || temp > 28) return Color.Error;
        if (temp < 20 || temp > 25) return Color.Warning;
        return Color.Success;
    }
    
    private Color GetHumidityColor(int humidity)
    {
        if (humidity < 30 || humidity > 70) return Color.Error;
        if (humidity < 40 || humidity > 60) return Color.Warning;
        return Color.Success;
    }
    
    private Color GetPressureColor(int pressure)
    {
        if (pressure < 1000 || pressure > 1025) return Color.Warning;
        return Color.Default;
    }
    
    private Color GetAirQualityColor(int aqi)
    {
        if (aqi > 75) return Color.Error;
        if (aqi > 50) return Color.Warning;
        return Color.Success;
    }
    

    // Danger checks
    private bool IsTemperatureDangerous(double temp)
    {
        return temp < 15 || temp > 35;
    }
    
    private bool IsHumidityDangerous(int humidity)
    {
        return humidity < 20 || humidity > 80;
    }
    
    private bool IsAirQualityDangerous(int aqi)
    {
        return aqi > 75;
    }
}